apiVersion: v1
kind: Namespace
metadata:
  labels:
    admission.gatekeeper.sh/ignore: no-self-managing
    control-plane: controller-manager
    gatekeeper.sh/system: "yes"
  name: gatekeeper-system
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    gatekeeper.sh/system: "yes"
  name: configs.config.gatekeeper.sh
spec:
  group: config.gatekeeper.sh
  names:
    kind: Config
    listKind: ConfigList
    plural: configs
    singular: config
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: Config is the Schema for the configs API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          description: ConfigSpec defines the desired state of Config
          properties:
            match:
              description: Configuration for namespace exclusion
              items:
                properties:
                  excludedNamespaces:
                    items:
                      type: string
                    type: array
                  processes:
                    items:
                      type: string
                    type: array
                type: object
              type: array
            readiness:
              description: Configuration for readiness tracker
              properties:
                statsEnabled:
                  type: boolean
              type: object
            sync:
              description: Configuration for syncing k8s objects
              properties:
                syncOnly:
                  description: If non-empty, only entries on this list will be replicated into OPA
                  items:
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      version:
                        type: string
                    type: object
                  type: array
              type: object
            validation:
              description: Configuration for validation
              properties:
                traces:
                  description: List of requests to trace. Both "user" and "kinds" must be specified
                  items:
                    properties:
                      dump:
                        description: Also dump the state of OPA with the trace. Set to `All` to dump everything.
                        type: string
                      kind:
                        description: Only trace requests of the following GroupVersionKind
                        properties:
                          group:
                            type: string
                          kind:
                            type: string
                          version:
                            type: string
                        type: object
                      user:
                        description: Only trace requests from the specified user
                        type: string
                    type: object
                  type: array
              type: object
          type: object
        status:
          description: ConfigStatus defines the observed state of Config
          type: object
      type: object
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    gatekeeper.sh/system: "yes"
  name: constraintpodstatuses.status.gatekeeper.sh
spec:
  group: status.gatekeeper.sh
  names:
    kind: ConstraintPodStatus
    listKind: ConstraintPodStatusList
    plural: constraintpodstatuses
    singular: constraintpodstatus
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ConstraintPodStatus is the Schema for the constraintpodstatuses API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        status:
          description: ConstraintPodStatusStatus defines the observed state of ConstraintPodStatus
          properties:
            constraintUID:
              description: Storing the constraint UID allows us to detect drift, such as when a constraint has been recreated after its CRD was deleted out from under it, interrupting the watch
              type: string
            enforced:
              type: boolean
            errors:
              items:
                description: Error represents a single error caught while adding a constraint to OPA
                properties:
                  code:
                    type: string
                  location:
                    type: string
                  message:
                    type: string
                required:
                - code
                - message
                type: object
              type: array
            id:
              type: string
            observedGeneration:
              format: int64
              type: integer
            operations:
              items:
                type: string
              type: array
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.3.0
  creationTimestamp: null
  labels:
    gatekeeper.sh/system: "yes"
  name: constrainttemplatepodstatuses.status.gatekeeper.sh
spec:
  group: status.gatekeeper.sh
  names:
    kind: ConstraintTemplatePodStatus
    listKind: ConstraintTemplatePodStatusList
    plural: constrainttemplatepodstatuses
    singular: constrainttemplatepodstatus
  scope: Namespaced
  validation:
    openAPIV3Schema:
      description: ConstraintTemplatePodStatus is the Schema for the constrainttemplatepodstatuses API
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        status:
          description: ConstraintTemplatePodStatusStatus defines the observed state of ConstraintTemplatePodStatus
          properties:
            errors:
              items:
                description: CreateCRDError represents a single error caught during parsing, compiling, etc.
                properties:
                  code:
                    type: string
                  location:
                    type: string
                  message:
                    type: string
                required:
                - code
                - message
                type: object
              type: array
            id:
              description: 'Important: Run "make" to regenerate code after modifying this file'
              type: string
            observedGeneration:
              format: int64
              type: integer
            operations:
              items:
                type: string
              type: array
            templateUID:
              description: UID is a type that holds unique ID values, including UUIDs.  Because we don't ONLY use UUIDs, this is an alias to string.  Being a type captures intent and helps make sure that UIDs and names do not get conflated.
              type: string
          type: object
      type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  creationTimestamp: null
  labels:
    controller-tools.k8s.io: "1.0"
    gatekeeper.sh/system: "yes"
  name: constrainttemplates.templates.gatekeeper.sh
spec:
  group: templates.gatekeeper.sh
  names:
    kind: ConstraintTemplate
    plural: constrainttemplates
  scope: Cluster
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      properties:
        apiVersion:
          description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
          type: string
        kind:
          description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
          type: string
        metadata:
          type: object
        spec:
          properties:
            crd:
              properties:
                spec:
                  properties:
                    names:
                      properties:
                        kind:
                          type: string
                        shortNames:
                          items:
                            type: string
                          type: array
                      type: object
                    validation:
                      type: object
                  type: object
              type: object
            targets:
              items:
                properties:
                  libs:
                    items:
                      type: string
                    type: array
                  rego:
                    type: string
                  target:
                    type: string
                type: object
              type: array
          type: object
        status:
          properties:
            byPod:
              items:
                properties:
                  errors:
                    items:
                      properties:
                        code:
                          type: string
                        location:
                          type: string
                        message:
                          type: string
                      required:
                      - code
                      - message
                      type: object
                    type: array
                  id:
                    description: a unique identifier for the pod that wrote the status
                    type: string
                  observedGeneration:
                    format: int64
                    type: integer
                type: object
              type: array
            created:
              type: boolean
          type: object
  version: v1beta1
  versions:
  - name: v1beta1
    served: true
    storage: true
  - name: v1alpha1
    served: true
    storage: false
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    gatekeeper.sh/system: "yes"
  name: gatekeeper-admin
  namespace: gatekeeper-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  labels:
    gatekeeper.sh/system: "yes"
  name: gatekeeper-manager-role
  namespace: gatekeeper-system
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    gatekeeper.sh/system: "yes"
  name: gatekeeper-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.gatekeeper.sh
  resources:
  - configs
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - config.gatekeeper.sh
  resources:
  - configs/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - constraints.gatekeeper.sh
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - policy
  resources:
  - podsecuritypolicies
  verbs:
  - use
- apiGroups:
  - status.gatekeeper.sh
  resources:
  - '*'
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - templates.gatekeeper.sh
  resources:
  - constrainttemplates
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - templates.gatekeeper.sh
  resources:
  - constrainttemplates/finalizers
  verbs:
  - delete
  - get
  - patch
  - update
- apiGroups:
  - templates.gatekeeper.sh
  resources:
  - constrainttemplates/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - gatekeeper-validating-webhook-configuration
  resources:
  - validatingwebhookconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    gatekeeper.sh/system: "yes"
  name: gatekeeper-manager-rolebinding
  namespace: gatekeeper-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: gatekeeper-manager-role
subjects:
- kind: ServiceAccount
  name: gatekeeper-admin
  namespace: gatekeeper-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    gatekeeper.sh/system: "yes"
  name: gatekeeper-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: gatekeeper-manager-role
subjects:
- kind: ServiceAccount
  name: gatekeeper-admin
  namespace: gatekeeper-system
---
apiVersion: v1
data:
  client.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSekNDQWkrZ0F3SUJBZ0lVQlp4bWdvTUc1alFzMWZXT0R0MlNvekwwTm9Fd0RRWUpLb1pJaHZjTkFRRUwKQlFBd016RXhNQzhHQTFVRUF3d29jMlZ5ZG1WeUxYTmxjblpwWTJVdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbApjaTVzYjJOaGJEQWVGdzB5TURBM016RXlNekl5TlROYUZ3MHpNREEzTWpreU16SXlOVE5hTURNeE1UQXZCZ05WCkJBTU1LSE5sY25abGNpMXpaWEoyYVdObExtUmxabUYxYkhRdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd3d2dnRWkKTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEM2s4MFREakxZYkNvTkV4NXBxNW9SRWdFNgozSGxYOUxQU0ttTjJOWDUwdmZJN0VLUkV0VXViNXJkUWt5MmxaMGxrbFFySDZtR2NxWmZ6SUJhNE5XWWRCL0Z5CkpNM3Brd1pqZnFMNzUzTktDcWpkZldYWW1SalJJd3l3S2o2Ti9TTUdkMHJUQXQxeWdLTHYrMXJEUGVleUxBMGQKSk1NbjhSWmxpaE5aT0picmZ0MXVlMEVYcmJFLzRJRGtWVnhJV3Q5eEdOd3lraVBxbDBCc0c1YjlOV3BMY2Z5dAp0NHBSbUF0c1NwYXoydGZXL0M1d3M2UHZaZE1yZG9JV3F6dkM5SUxFci9OOU1SRUE5Q0VLRnpDKzR6a3Jyc2puCjJlT1k1MDZFRWpJc0hUSlliSTlLUHVlZ2VCWWJ5K0ZJVGRzZ252YUtOMlJuNmVaeEdJWENtQzdOUzRUekFnTUIKQUFHalV6QlJNQjBHQTFVZERnUVdCQlNORnJBSGF6VHNXclRqMUE2RUtNNWE0ZjFHd0RBZkJnTlZIU01FR0RBVwpnQlNORnJBSGF6VHNXclRqMUE2RUtNNWE0ZjFHd0RBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzCkRRRUJDd1VBQTRJQkFRQytWVGp1R25vcFlFTU9kOHp1Ni9KMmNMU3JKQUl0Qy9yRFZZU0pmeXFwTFJSZWswMk4KRjlCcm1qZVRoQi9qbENJTy9OUFVXdGYySk8vMzUwT2JRZ0kyUWxoc2l5OWNMTWMzTEtJL3lTMDhqdnJUNERxRAoxeVRQM0d3b2ZDUEpGbTd0QWYvZEs0ZmxZYmlVcjZjWnhmc1lyQ3ZYYlNLbENqV3M3MThHYWV4dDhIcmM4aSs1Cm5uWkZFMmxzNndGcTFROVJaa3hyVUI5dWw1Z3IybmlXU3ZBRlpiSjJQZ0NUc2lKMk1Ob25URE5OQ0l6ZGp4WWYKalZEcVcxWmp6Q3FWTmhRbjUybDIxZnU1MEwyR3pSN3YxWjRkaTREL0Vodm15VytxNTFsTTRreHFwZjN4MGRZbgpPQW1HNStGTkhZN1dRQTBDQTlESG1yOGtSSFR5ZDBVbVVyVGkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  client.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUV2d0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQktrd2dnU2xBZ0VBQW9JQkFRRDNrODBURGpMWWJDb04KRXg1cHE1b1JFZ0U2M0hsWDlMUFNLbU4yTlg1MHZmSTdFS1JFdFV1YjVyZFFreTJsWjBsa2xRckg2bUdjcVpmegpJQmE0TldZZEIvRnlKTTNwa3daamZxTDc1M05LQ3FqZGZXWFltUmpSSXd5d0tqNk4vU01HZDByVEF0MXlnS0x2CisxckRQZWV5TEEwZEpNTW44UlpsaWhOWk9KYnJmdDF1ZTBFWHJiRS80SURrVlZ4SVd0OXhHTnd5a2lQcWwwQnMKRzViOU5XcExjZnl0dDRwUm1BdHNTcGF6MnRmVy9DNXdzNlB2WmRNcmRvSVdxenZDOUlMRXIvTjlNUkVBOUNFSwpGekMrNHprcnJzam4yZU9ZNTA2RUVqSXNIVEpZYkk5S1B1ZWdlQllieStGSVRkc2dudmFLTjJSbjZlWnhHSVhDCm1DN05TNFR6QWdNQkFBRUNnZ0VCQUl4YkRHMzdKTFF4VGYydmt4UlJKcno2dWh2R2xqeFpEQURmNnhjKzZId0MKbTJzRTJqdmhsQVhFWExTZlc4ZGpzT1lHNE4vSmJxRkVQRktuSkhvMk83ZkZvd29VOTIrdDNIZFhlY3Jad2pCOQpycEl5M3lSV1Z3MXBrMjNqNVNiV0ZaODZ6ZjZtcHlpYzZNS29leUlvM0V2VVVYTHVQbjFNWG1nZVNTM1J1UzJ6CjF4ZGdVWjVtdjZrYjYzakRkekFLbHVJK1BxZnB4K1RERU1zRGFBYnF5T01IZHY4U3hwTjREMjY2VmFZRzAzaVYKajUvNkNlOXRrRHM5d0xXQVRhcHYxMWIwZFVOYlF0VE5nZUZrVEhQVXhSL0VVQTJVd1pSalFGRDYwOWt1YlMycwpQa24vWFNkSk80UFFGSk5zZndyUWk5R1pDdlBXZk1JNy9sWUtkdWJDY1ZFQ2dZRUEveHRIdGtucC8wbDVYNzlsClNodXJ6RGpTUVRoTDdpVmdmTXNXY2Vjd1lKOUI5UVY2ci84d0IvcTBkbDVFd3pQeE02ckNad3dDS0ZTODRIR3cKUHZZTnFTRStrL2VYV2Y1MGFDWkFEUHFoeHZKbTJlRE8ydUlmemk3Zkh3SXd6N0ZUUGUvU2xHc09jRkNFQndqUwpXMkQvRmZPeDIrTFluK3B3YkxkNll4T3ZmeDhDZ1lFQStISEZRQW9wYUpHUzd3R1ZtanVOOTg0QnVXNXcwaFFnCnpSaDdVYkR5c29NcEk3WGxUczUrd2tHdjVLbVByUmdyZkgzNEhXclR6U3lYWnF0TWRxUnVqOWFuQys1Ris3OFIKbFh0VDl1SDR3dWVmS2xibE9lY0UzKzBwcTcyK3BUMUV6eXJYYnNydG9hNG15bHpNeGVqaTJKZ2tTMTZtdjQ0VQpRY08yMWRoaXc2MENnWUVBNFpEaGk5RTNVajlKVHR3UlY4RzMyayt6dVc5cDFCekFnQmVpdFB4U3pseURHWC9LCng2dkFjSTNBMjVqbS9DTUZkMFhadHZ2clBIWVF1L1JLZnFGWjJ0NUdVdGR0d0drNXpJMWx2UlF2ejVXdVU2QnYKeHlLQ05QRkU0RW96bHJHWWhQOTFGejdCK1pWMzZEQm9yOXZJTVVUVlV6UDFqeERnYjRDY2V0YUJLc2tDZ1lFQQp6a3dTWVRuTzVwQ3l0Sm5aTXNldS9Bem9xNlJFTkgwWU81WFBtS2JZOEZndkNnTVpWTlhzdGJzN3BpRVNOOFl4CkhkK3Y3aVZ0bUJvbDRjL3QzenBzd0MyYWFqTEJrK2cxWHEyWXJCRTVzZ1lJeVd4OFRSZENtZnBodHNVSkVFYU8KNDRPTWZlZ3RhQ3FtOVRRWHFXTFhNc2txb2hjSFdWcE9BY25WQVQ3N3k4VUNnWUFVSjRlTnBuUTdWVHdVQUNUYgpsK2pKRytoa3hHRlIyTnlCNzFiU1c4Szkvbko2bUsvUDlGSnFhdEUvVXl1NU14TTJWYzdOdTE5R2JNckVPZzJsClgxa1JoYjgvR1U3ZEZJWmdPZDl4UWR1cWtaOVBQWTNrcnpHUm1SWUNna1JvMEREMXFZaEJFWlVyRjZwTnRPZW4KdDJuUWthVWhOV3B1N3k2cW1nQUY1bzIvMXc9PQotLS0tLUVORCBQUklWQVRFIEtFWS0tLS0tCg==
  server.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURSekNDQWkrZ0F3SUJBZ0lVZXZ0N3dRN1dYa1VMZ21nc2h1bkZvelU2U01zd0RRWUpLb1pJaHZjTkFRRUwKQlFBd016RXhNQzhHQTFVRUF3d29jMlZ5ZG1WeUxYTmxjblpwWTJVdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbApjaTVzYjJOaGJEQWVGdzB5TURBM016RXlNekl5TWpCYUZ3MHpNREEzTWpreU16SXlNakJhTURNeE1UQXZCZ05WCkJBTU1LSE5sY25abGNpMXpaWEoyYVdObExtUmxabUYxYkhRdWMzWmpMbU5zZFhOMFpYSXViRzlqWVd3d2dnRWkKTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEY3B2c3dEWmR2Sk5XYkhOOGpQM3NOQVBoZApIbHBNMnRVUTVscVJ2MXRCTWc2MFpNNGNGRm9kMlFYVDNxSWIyOU5jZmg5aXNlUzdhSEdYVU5lV1NJekRxQm1sCmFBaFdQZnFLSWNhQ1lRT01XVTJvMHJMT200YVdub1Flb3h4NUpkeUxXRmZiTUlEdXJObE13WnlHd3lrR3htNnEKcjloTjdzR1E1bzk4MXQ0UW8yRXlaYVZIeXVyVkxwSzB6TTNDS1dBb2NqREsvK0I0bTRXTVgxZk5ld0FGTWVYNwpOWWRBdVRwMHIza2FxdEpuTmwzWkRFckVhd0RjcWNQeHUrWlZkSzh6WnlYV2ROYjJJeFlzV016VEJYY0JXUEVmCldyRnhzOTVqeFBmNkRrTEF5MlpwUDVhNjVmUjJUaGRnNmJuRVR4SEtUOFczNllHYlY4YzFnY3VxT3gvbkFnTUIKQUFHalV6QlJNQjBHQTFVZERnUVdCQlRCSWd3Y1cxOTlaRG5KeGE5QWlNYkdNZk1CL0RBZkJnTlZIU01FR0RBVwpnQlRCSWd3Y1cxOTlaRG5KeGE5QWlNYkdNZk1CL0RBUEJnTlZIUk1CQWY4RUJUQURBUUgvTUEwR0NTcUdTSWIzCkRRRUJDd1VBQTRJQkFRQjR1UzNLMFhSSzhNYUg5M0ZXQVhGNTdiRFljSlpycmI2ekNlbkMvOHJuRjRxZnovcEwKMWxMbDBnUVdsd2JodXNvdGVaWW51NHlmRzR5Nm43a2tFSGs3eFJOeVpsbzdFR1plekJPQVN2bzRXaHAxeEZCZQpjWkJRWk53N3lySU84d3JoaU5jZE9ucitBNFdjc3FycGp1R2FkY3l2S3dxL1FZRy9YWFJLb2VhM0xkaUFYRlRxCkFCeFlQRkZnczV1VS9KU1NLcjRma3dvT3o1WjFjWWFOclVwOFVwaVN4OHZtcTVWRzZiOEJ1OURzNE5wcGlaNDQKMVBzcHFiZWRWSG5EVlM4cEJPc3E0T2V4YlRGbjNkV0dNeEtkM1MrYjhhZ3dhMGNSV3FZOUNvRlBTdUlDRko0eApmcGh2UUl4aUtHMlpZa3Z6R0hVYjhnUVU5eXMyNjRYZkZJQTEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
kind: Secret
metadata:
  labels:
    gatekeeper.sh/system: "yes"
  name: gatekeeper-endpoint-certs
  namespace: gatekeeper-system
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  labels:
    gatekeeper.sh/system: "yes"
  name: gatekeeper-webhook-server-cert
  namespace: gatekeeper-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    gatekeeper.sh/system: "yes"
  name: gatekeeper-webhook-service
  namespace: gatekeeper-system
spec:
  ports:
  - port: 443
    targetPort: 8443
  selector:
    control-plane: controller-manager
    gatekeeper.sh/operation: webhook
    gatekeeper.sh/system: "yes"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    gatekeeper.sh/operation: audit
    gatekeeper.sh/system: "yes"
  name: gatekeeper-audit
  namespace: gatekeeper-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: audit-controller
      gatekeeper.sh/operation: audit
      gatekeeper.sh/system: "yes"
  template:
    metadata:
      annotations:
        container.seccomp.security.alpha.kubernetes.io/manager: runtime/default
      labels:
        control-plane: audit-controller
        gatekeeper.sh/operation: audit
        gatekeeper.sh/system: "yes"
    spec:
      containers:
      - args:
        - --operation=audit
        - --operation=status
        - --logtostderr
        - --audit-interval=5
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: openpolicyagent/gatekeeper:v3.1.0-beta.12
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
        name: auditcontainer
        ports:
        - containerPort: 8888
          name: metrics
          protocol: TCP
        - containerPort: 9090
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 9090
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          runAsGroup: 999
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /certs/endpoint
          name: endpoint-certs
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: gatekeeper-admin
      terminationGracePeriodSeconds: 60
      volumes:
      - name: endpoint-certs
        secret:
          defaultMode: 420
          secretName: gatekeeper-endpoint-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
    gatekeeper.sh/operation: webhook
    gatekeeper.sh/system: "yes"
  name: gatekeeper-controller-manager
  namespace: gatekeeper-system
spec:
  replicas: 3
  selector:
    matchLabels:
      control-plane: controller-manager
      gatekeeper.sh/operation: webhook
      gatekeeper.sh/system: "yes"
  template:
    metadata:
      annotations:
        container.seccomp.security.alpha.kubernetes.io/manager: runtime/default
      labels:
        control-plane: controller-manager
        gatekeeper.sh/operation: webhook
        gatekeeper.sh/system: "yes"
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: gatekeeper.sh/operation
                  operator: In
                  values:
                  - webhook
              topologyKey: kubernetes.io/hostname
            weight: 100
      containers:
      - args:
        - --port=8443
        - --logtostderr
        - --exempt-namespace=gatekeeper-system
        - --operation=webhook
        command:
        - /manager
        env:
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        image: openpolicyagent/gatekeeper:v3.1.0-beta.12
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 9090
        name: manager
        ports:
        - containerPort: 8443
          name: webhook-server
          protocol: TCP
        - containerPort: 8888
          name: metrics
          protocol: TCP
        - containerPort: 9090
          name: healthz
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 9090
        resources:
          limits:
            cpu: 1000m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          runAsGroup: 999
          runAsNonRoot: true
          runAsUser: 1000
        volumeMounts:
        - mountPath: /certs
          name: cert
          readOnly: true
        - mountPath: /certs/endpoint
          name: endpoint-certs
      nodeSelector:
        kubernetes.io/os: linux
      serviceAccountName: gatekeeper-admin
      terminationGracePeriodSeconds: 60
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: gatekeeper-webhook-server-cert
      - name: endpoint-certs
        secret:
          defaultMode: 420
          secretName: gatekeeper-endpoint-certs
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  labels:
    gatekeeper.sh/system: "yes"
  name: gatekeeper-validating-webhook-configuration
webhooks:
- clientConfig:
    caBundle: Cg==
    service:
      name: gatekeeper-webhook-service
      namespace: gatekeeper-system
      path: /v1/admit
  failurePolicy: Ignore
  name: validation.gatekeeper.sh
  namespaceSelector:
    matchExpressions:
    - key: admission.gatekeeper.sh/ignore
      operator: DoesNotExist
  rules:
  - apiGroups:
    - '*'
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - '*'
  sideEffects: None
  timeoutSeconds: 5
- clientConfig:
    caBundle: Cg==
    service:
      name: gatekeeper-webhook-service
      namespace: gatekeeper-system
      path: /v1/admitlabel
  failurePolicy: Fail
  name: check-ignore-label.gatekeeper.sh
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - namespaces
  sideEffects: None
  timeoutSeconds: 5
