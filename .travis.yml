sudo: required
language: go
go_import_path: github.com/open-policy-agent/gatekeeper
go:
- "1.12.x"

services:
- docker

jobs:
  include:
    - stage: "build, unit test"
      script: make
    - stage: "e2e"
      before_script:
      - make e2e-bootstrap
      - export KUBECONFIG="$(kind get kubeconfig-path --name="kind")" && make e2e-build-load-image IMG=gatekeeper-e2e:latest
      - make patch-image IMG=gatekeeper-e2e:latest USE_LOCAL_IMG=true
      script:
      - export KUBECONFIG="$(kind get kubeconfig-path --name="kind")" && make deploy && make test-e2e
      - echo -e '\n\n======= manager logs =======\n\n' && kubectl logs -n gatekeeper-system gatekeeper-controller-manager-0 manager
    - stage: "deploy, verify"
      if: repo = open-policy-agent/gatekeeper AND type != pull_request
      script: 
      - make manager
      deploy:
        - provider: script
          skip_cleanup: true
          script: make travis-dev-deploy
          on:
            repo: open-policy-agent/gatekeeper
            branch: e2e # only update dev image tag for master commits
            tags: false
        - provider: script
          skip_cleanup: true
          script: make travis-release-deploy IMG=quay.io/open-policy-agent/gatekeeper:${TRAVIS_TAG} VERSION=${TRAVIS_TAG}
          on:
            repo: open-policy-agent/gatekeeper
            branch: e2e # only update release image tag for tags on master
            tags: true
        - provider: script
          skip_cleanup: true
          script: make e2e-bootstrap && make patch-image IMG=quay.io/open-policy-agent/gatekeeper:${TRAVIS_TAG} USE_LOCAL_IMG=false && export KUBECONFIG="$(kind get kubeconfig-path --name="kind")" && make deploy && make test-e2e && echo -e '\n\n======= manager logs =======\n\n' && kubectl logs -n gatekeeper-system gatekeeper-controller-manager-0 manager
          on:
            repo: open-policy-agent/gatekeeper
            branch: e2e # only run verify e2e on release image tag for tags on master
            tags: true
    # - stage: "verify release"
    #   name: "e2e on released image"
    #   if: repo = open-policy-agent/gatekeeper AND type != pull_request AND tag IS present
    #   before_script:
    #   - KIND_VERSION=0.4.0
    #   - KUSTOMIZE_VERSION=3.0.2
    #   # Download and install kind
    #   - curl -L https://github.com/kubernetes-sigs/kind/releases/download/v${KIND_VERSION}/kind-linux-amd64 --output kind && chmod +x kind && sudo mv kind /usr/local/bin/
    #   # Create kind cluster
    #   - |
    #     if [ $(kind get clusters) ]; then
    #       export KUBECONFIG="$(kind get kubeconfig-path --name="kind")"
    #     else
    #       kind create cluster
    #     fi
    #   # Get kubeconfig
    #   - export KUBECONFIG="$(kind get kubeconfig-path --name="kind")"
    #   # Update manager_image_patch.yaml with latest release tag (git tag)
    #   - make docker-build IMG=quay.io/open-policy-agent/gatekeeper:${TRAVIS_TAG}
    #   # Update deployment yamls with the released tag
    #   - make release-deploy NEWVERSION=${TRAVIS_TAG}
    #   # Download and install kubectl
    #   - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl && chmod +x ./kubectl && sudo mv kubectl /usr/local/bin/
    #   # Download and install kustomize
    #   - curl -L https://github.com/kubernetes-sigs/kustomize/releases/download/v${KUSTOMIZE_VERSION}/kustomize_${KUSTOMIZE_VERSION}_linux_amd64 --output kustomize && chmod +x kustomize && sudo mv kustomize /usr/local/bin/
    #   script:
    #   - make deploy
    #   - make test-e2e
    #   - echo -e '\n\n======= manager logs =======\n\n' && kubectl logs -n gatekeeper-system gatekeeper-controller-manager-0 manager
